name: Go CI and Release

on:
  push:
    branches: ["main"]
    tags: ["v*"] # Trigger on version tags like v1.0, v1.2.3
  pull_request:
    branches: ["main"]

permissions:
  contents: write # Needed to create releases and upload assets

jobs:
  # Build and test on pushes/PRs to main (not tags)
  build-and-test:
    # Run only on pushes/PRs to main, not on tags
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  # Create release and upload cross-compiled binaries on tag pushes
  release:
    # Run only when a version tag is pushed
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Define target platforms
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude: # Exclude unsupported combinations if any
          - goos: windows
            goarch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Update Workspace
        run: |
          go work sync

      - name: Build Binary for ${{ matrix.goos }}/${{ matrix.goarch }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          OUTPUT_NAME="dns-benchmark-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            OUTPUT_NAME="${OUTPUT_NAME}.exe"
          fi
          echo "Building for $GOOS/$GOARCH -> $OUTPUT_NAME"
          go build -o "$OUTPUT_NAME" -ldflags="-s -w"  ./cmd/main.go
          ls -lh "$OUTPUT_NAME"

      - name: Upload Binaries to Release
        uses: softprops/action-gh-release@v2
        with:
          files: dns-benchmark-${{ matrix.goos }}-${{ matrix.goarch }}*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
